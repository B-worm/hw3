function A=histogram(im,showswitch) %求直方图
A=zeros(1,256);
[m,n]=size(im);
for i=1:m
    for j=1:n
        A(1,im(i,j)+1)= A(1,im(i,j)+1)+1;
    end
end
if(showswitch==1)
    %subplot(1,2,1);
    %imshow(im);
    %title('image');
    %subplot(1,2,2);
    bar(A,'r');
    %title('histogram');
end
end

function img=htgrameqltion(im)%直方图均衡化
subplot(2,2,1);
htg=histogram(im,1);
title('original histogram')
[m,n]=size(im);
img=uint8(zeros(m,n));
p=htg/(m*n);
rf=zeros(1,256);
sum=0;
for i=1:256
    sum=sum+255*p(1,i);
    rf(i)=round(sum);
end
for i=1:m
    for j=1:n
        img(i,j)=rf(1,im(i,j)+1);
    end
end
subplot(2,2,2)
new_htg=histogram(img,1);
title('histogram equalisation')
subplot(2,2,3);
imshow(im);
title('original image')
subplot(2,2,4);
imshow(img);
title('final image')
end

function n_img=my_histogram_matching(or_im,mod_im)%直方图匹配
    or_hist=imhist(or_im);
    mod_hist=imhist(mod_im);
    n_img=histeq(or_im,mod_hist);
    out_hist=imhist(n_img);
    figure;
    subplot(231);imshow(mod_im);title('model image');
    subplot(232);imshow(or_im);title('input image');
    subplot(233);imshow(n_img);title('output image');
    subplot(234);bar(mod_hist);title('model histogram');
    subplot(235);bar(or_hist);title('input image histogram');
    subplot(236);bar(out_hist);title('output image histogram');
end


%局部直方图增强
function img=local_histogram_equalisation(im,f,method)%滤波器的大小为f*f
subplot(2,2,1);
imshow(im);
title('original image');
subplot(2,2,2);
histogram(im,1);
title('original histogram')
p=floor(f/2);
[m,n]=size(im);
im=wextend('2','zpd',im,f);
img=uint8(zeros(m,n));
model=zeros(f,f);
if(method==1)
    for i=1+f:m+f
        for j=1+f:n+f
            model=im(i-f:i+f,j-f:j+f);
            local_htg=histeq(model);
            img(i-f,j-f)=local_htg(p+1,p+1);
        end
    end
end

if(method==2)
for i=1+f+p:f:m+f
        for j=1+f+p:f:n+f
            model=im(i-p:i+p,j-p:j+p);
            local_htg=histeq(model);
            img(i-f-p:i-f+p,j-f-p:j-f+p)=local_htg;
        end
    end
end

subplot(2,2,3);
imshow(img);
title('local_htg_equ image');
subplot(2,2,4);
histogram(img,1);
title('final histogram');
end


function [n_img,T]=im_segmentation_by_histogram(im)%直方图分割
[counts,x]=imhist(im);
subplot(121);
bar(x,counts,'r');
T = otsuthresh(counts);
n_img = imbinarize(im,T);
subplot(122);
imshow(n_img);
